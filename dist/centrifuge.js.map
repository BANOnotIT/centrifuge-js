{"version":3,"file":"centrifuge.js","mappings":"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AAS,CAAT,EAAY4B,IAAI,GAAG,CAAnB,CAApB,CAAjB;AAEA,SAAOnL,IAAI,CAACoL,KAAL,CAAW,CAAC,IAAIrL,MAAL,IAAe7H,QAA1B,CAAP;AACD;;AAAA;;AAEM,SAASmT,WAAT,CAAqBjW,IAArB,EAA2B;AAChC,SAAO,WAAWA,IAAX,IAAmBA,IAAI,CAAC2B,KAAL,KAAe,IAAzC;AACD;;AAAA;;AAEM,SAASuU,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAC3B,OAAK,IAAMC,GAAX,IAAkBD,CAAlB,EAAqB;AACnB,QAAIA,CAAC,CAACvV,cAAF,CAAiBwV,GAAjB,CAAJ,EAA2B;AACzBF,MAAAA,CAAC,CAACE,GAAD,CAAD,GAASD,CAAC,CAACC,GAAD,CAAV;AACD;AACF;;AACD,SAAOF,CAAP;AACD;;AAAA;;;;;;;ACvCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;UChfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;UEPD;UACA;UACA;UACA","sources":["webpack://Centrifuge/webpack/universalModuleDefinition","webpack://Centrifuge/./src/centrifuge.js","webpack://Centrifuge/./src/index.js","webpack://Centrifuge/./src/json.js","webpack://Centrifuge/./src/subscription.js","webpack://Centrifuge/./src/utils.js","webpack://Centrifuge/./node_modules/events/events.js","webpack://Centrifuge/webpack/bootstrap","webpack://Centrifuge/webpack/runtime/global","webpack://Centrifuge/webpack/before-startup","webpack://Centrifuge/webpack/startup","webpack://Centrifuge/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(this, function() {\nreturn ","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff,\n  extend\n} from './utils';\n\nconst _errorTimeout = 'timeout';\nconst _errorConnectionClosed = 'connection closed';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._websocket = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._xmlhttprequest = null;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._serverSubs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastOffset = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._xhrID = 0;\n    this._xhrs = {};\n    this._dispatchPromise = Promise.resolve();\n    this._protocol = '';\n    this._config = {\n      protocol: '',\n      protocolVersion: 'v1',\n      debug: false,\n      name: 'js',\n      version: '',\n      websocket: null,\n      sockjs: null,\n      xmlhttprequest: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTimeout: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null,\n      disableWithCredentials: false\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  setRefreshHeaders(headers) {\n    this._config.refreshHeaders = headers;\n  }\n\n  setRefreshParams(params) {\n    this._config.refreshParams = params;\n  }\n\n  setRefreshData(data) {\n    this._config.refreshData = data;\n  }\n\n  setSubscribeHeaders(headers) {\n    this._config.subscribeHeaders = headers;\n  }\n\n  setSubscribeParams(params) {\n    this._config.subscribeParams = params;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    let xhr;\n    if (this._xmlhttprequest !== null) {\n      // use explicitly passed XMLHttpRequest object.\n      xhr = new this._xmlhttprequest();\n    } else {\n      xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n    }\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = !this._config.disableWithCredentials;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    if (this._config.websocket !== null) {\n      return true;\n    }\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    extend(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    const isProtobufURL = startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1;\n    if (isProtobufURL || this._config.protocol === 'protobuf') {\n      this._setFormat('protobuf');\n      this._protocol = 'protobuf';\n    } else {\n      if (this._config.protocol !== '' && this._config.protocol !== 'json') {\n        throw new Error('unsupported protocol ' + this._config.protocol);\n      }\n      this._setFormat('json');\n    }\n\n    if (this._config.protocolVersion !== 'v1' && this._config.protocolVersion !== 'v2') {\n      throw new Error('unsupported protocol version ' + this._config.protocolVersion);\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n\n    this._xmlhttprequest = this._config.xmlhttprequest;\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _abortInflightXHRs() {\n    for (const xhrID in this._xhrs) {\n      try {\n        this._xhrs[xhrID].abort();\n      } catch (e) {\n        this._debug('error aborting xhr', e);\n      }\n      delete this._xhrs[xhrID];\n    }\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback({ error: this._createErrorObject('disconnected') });\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          if (sub._shouldResubscribe()) {\n            sub._setSubscribing();\n          }\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    this._abortInflightXHRs();\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _isTransportOpen() {\n    if (this._isSockjs) {\n      return this._transport &&\n        this._transport.transport &&\n        this._transport.transport.readyState === this._transport.transport.OPEN;\n    }\n    return this._transport && this._transport.readyState === this._transport.OPEN;\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return true;\n    }\n\n    if (!this._isTransportOpen()) {\n      // resolve pending commands with error if transport is not open\n      for (let command in commands) {\n        let id = command.id;\n        if (!(id in this._callbacks)) {\n          continue;\n        }\n        const callbacks = this._callbacks[id];\n        clearTimeout(this._callbacks[id].timeout);\n        delete this._callbacks[id];\n        const errback = callbacks.errback;\n        errback({ error: this._createErrorObject(_errorConnectionClosed, 0) });\n      }\n      return false;\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n    return true;\n  }\n\n  _getSubProtocol() {\n    if (!this._protocol) {\n      return '';\n    }\n    return 'centrifuge-' + this._protocol;\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      if (this._config.sockjsTimeout !== null) {\n        sockjsOptions.timeout = this._config.sockjsTimeout;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      if (this._config.websocket !== null) {\n        this._websocket = this._config.websocket;\n      } else {\n        this._websocket = WebSocket;\n      }\n      const subProtocol = this._getSubProtocol();\n      if (subProtocol !== '') {\n        this._transport = new this._websocket(this._url, subProtocol);\n      } else {\n        this._transport = new this._websocket(this._url);\n      }\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      const req = {};\n\n      if (this._token) {\n        req.token = this._token;\n      }\n      if (this._connectData) {\n        req.data = this._connectData;\n      }\n      if (this._config.name) {\n        req.name = this._config.name;\n      }\n      if (this._config.version) {\n        req.version = this._config.version;\n      }\n\n      let subs = {};\n      let hasSubs = false;\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel) && this._serverSubs[channel].recoverable) {\n          hasSubs = true;\n          let sub = {\n            'recover': true\n          };\n          if (this._serverSubs[channel].seq || this._serverSubs[channel].gen) {\n            if (this._serverSubs[channel].seq) {\n              sub['seq'] = this._serverSubs[channel].seq;\n            }\n            if (this._serverSubs[channel].gen) {\n              sub['gen'] = this._serverSubs[channel].gen;\n            }\n          } else {\n            if (this._serverSubs[channel].offset) {\n              sub['offset'] = this._serverSubs[channel].offset;\n            }\n          }\n          if (this._serverSubs[channel].epoch) {\n            sub['epoch'] = this._serverSubs[channel].epoch;\n          }\n          subs[channel] = sub;\n        }\n      }\n      if (hasSubs) {\n        req.subs = subs;\n      }\n\n      this._latencyStart = new Date();\n\n      const msg = {};\n      if (this._config.protocolVersion === 'v2') {\n        msg.connect = req;\n      } else {\n        // Can omit CONNECT method here due to zero value.\n        msg.params = req;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        let result;\n        if (this._config.protocolVersion === 'v1') {\n          result = this._decoder.decodeCommandResult(this._methodType.CONNECT, resolveCtx.reply.result);\n        } else {\n          result = resolveCtx.reply.connect;\n        }\n        this._connectResponse(result, hasSubs);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        const err = rejectCtx.error;\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect(6, 'connect error', true);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = _errorConnectionClosed;\n      let needReconnect = true;\n      let code = 0;\n\n      if (closeEvent && 'code' in closeEvent && closeEvent.code) {\n        code = closeEvent.code;\n      }\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          if ((code >= 3500 && code < 4000) || (code >= 4500 && code < 5000)) {\n            needReconnect = false;\n          }\n        }\n      }\n\n      if (code < 3000) {\n        code = 4;\n        reason = 'connection closed';\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        const ctx = {\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        };\n        if (this._config.protocolVersion === 'v2') {\n          ctx['code'] = code;\n        }\n        this._config.onTransportClose(ctx);\n      }\n\n      this._disconnect(code, reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    return this._rpc('', data);\n  }\n\n  namedRPC(method, data) {\n    return this._rpc(method, data);\n  }\n\n  _rpc(method, data) {\n    const req = {\n      data: data\n    };\n    if (method !== '') {\n      req.method = method;\n    };\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      msg.rpc = req;\n    } else {\n      msg.method = this._methodType.RPC;\n      msg.params = req;\n    }\n    let self = this;\n    return this._methodCall(msg, function (reply) {\n      let result;\n      if (self._config.protocolVersion === 'v1') {\n        result = self._decoder.decodeCommandResult(self._methodType.RPC, reply.result);\n      } else {\n        result = reply.rpc;\n      }\n      return {\n        'data': result.data\n      };\n    });\n  }\n\n  send(data) {\n    const req = {\n      data: data\n    };\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      msg.send = req;\n    } else {\n      msg.method = this._methodType.SEND;\n      msg.params = req;\n    }\n\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n\n    const sent = this._transportSend([msg]); // can send async message to server without id set\n    if (!sent) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    };\n    return Promise.resolve({});\n  }\n\n  _getHistoryRequest(channel, options) {\n    let params = {\n      channel: channel\n    };\n    if (options !== undefined) {\n      if (options.since) {\n        params['since'] = {\n          'offset': options.since.offset\n        };\n        if (options.since.epoch) {\n          params['since']['epoch'] = options.since.epoch;\n        }\n      };\n      if (options.limit !== undefined) {\n        params['limit'] = options.limit;\n      }\n      if (options.reverse === true) {\n        params['reverse'] = true;\n      }\n    };\n    return params;\n  }\n\n  _methodCall(msg, resultCB) {\n    if (!this.isConnected()) {\n      return Promise.reject(this._createErrorObject(_errorConnectionClosed, 0));\n    }\n    return new Promise((resolve, reject) => {\n      this._call(msg).then(resolveCtx => {\n        resolve(resultCB(resolveCtx.reply));\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        reject(rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    });\n  }\n\n  publish(channel, data) {\n    const req = {\n      channel: channel,\n      data: data\n    };\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      msg.publish = req;\n    } else {\n      msg.method = this._methodType.PUBLISH;\n      msg.params = req;\n    }\n    return this._methodCall(msg, function () {\n      return {};\n    });\n  }\n\n  history(channel, options) {\n    const req = this._getHistoryRequest(channel, options);\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      msg.history = req;\n    } else {\n      msg.method = this._methodType.HISTORY;\n      msg.params = req;\n    }\n    let self = this;\n    return this._methodCall(msg, function (reply) {\n      let result;\n      if (self._config.protocolVersion === 'v1') {\n        result = self._decoder.decodeCommandResult(self._methodType.HISTORY, reply.result);\n      } else {\n        result = reply.history;\n      }\n      return {\n        'publications': result.publications,\n        'epoch': result.epoch || '',\n        'offset': result.offset || 0\n      };\n    });\n  }\n\n  presence(channel) {\n    const req = {\n      channel: channel\n    };\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      msg.presence = req;\n    } else {\n      msg.method = this._methodType.PRESENCE;\n      msg.params = req;\n    }\n    let self = this;\n    return this._methodCall(msg, function (reply) {\n      let result;\n      if (self._config.protocolVersion === 'v1') {\n        result = self._decoder.decodeCommandResult(self._methodType.PRESENCE, reply.result);\n      } else {\n        result = reply.presence;\n      }\n      return {\n        'presence': result.presence\n      };\n    });\n  }\n\n  presenceStats(channel) {\n    const req = {\n      channel: channel\n    };\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      msg['presence_stats'] = req;\n    } else {\n      msg.method = this._methodType.PRESENCE_STATS;\n      msg.params = req;\n    }\n    return this._methodCall(msg, function (reply) {\n      let result;\n      if (self._config.protocolVersion === 'v1') {\n        result = self._decoder.decodeCommandResult(self._methodType.PRESENCE_STATS, reply.result);\n      } else {\n        result = reply.presence_stats;\n      }\n      return {\n        'num_users': result.num_users,\n        'num_clients': result.num_clients\n      };\n    });\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    this._dispatchPromise = this._dispatchPromise.then(() => {\n      let finishDispatch;\n      this._dispatchPromise = new Promise(resolve => {\n        finishDispatch = resolve;\n      });\n      this._dispatchSynchronized(replies, finishDispatch);\n    });\n    this._restartPing();\n  }\n\n  _dispatchSynchronized(replies, finishDispatch) {\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    p = p.then(() => {\n      finishDispatch();\n    });\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve => {\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      if (this._config.protocolVersion === 'v1') {\n        this._handlePush(reply.result, next);\n      } else {\n        this._handlePushV2(reply.push, next);\n      }\n    }\n\n    return p;\n  };\n\n  _call(msg) {\n    return new Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(code, reason, shouldReconnect) {\n    const reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    if (this._isDisconnected()) {\n      if (!reconnect) {\n        this._clearConnectedState(reconnect);\n      }\n      return;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    this._debug('disconnected:', reason, shouldReconnect);\n    this._setStatus('disconnected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (this._reconnecting === false) {\n      // fire unsubscribe events for server side subs.\n      for (const channel in this._serverSubs) {\n        if (this._serverSubs.hasOwnProperty(channel)) {\n          this.emit('unsubscribe', { channel: channel });\n        }\n      }\n      const ctx = {\n        reason: reason,\n        reconnect: reconnect\n      };\n      if (this._config.protocolVersion === 'v2') {\n        ctx['code'] = code;\n      }\n      this.emit('disconnect', ctx);\n    }\n\n    if (reconnect === false) {\n      this._subs = {};\n      this._serverSubs = {};\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect(7, 'refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const req = { token: this._token };\n        const msg = {};\n        if (this._config.protocolVersion === 'v2') {\n          msg.refresh = req;\n        } else {\n          msg.method = this._methodType.REFRESH;\n          msg.params = req;\n        }\n\n        const self = this;\n\n        this._call(msg).then(resolveCtx => {\n          let result;\n          if (self._config.protocolVersion === 'v1') {\n            result = self._decoder.decodeCommandResult(self._methodType.REFRESH, resolveCtx.reply.result);\n          } else {\n            result = resolveCtx.reply.refresh;\n          }\n          this._refreshResponse(result);\n          if (resolveCtx.next) {\n            resolveCtx.next();\n          }\n        }, rejectCtx => {\n          this._refreshError(rejectCtx.error);\n          if (rejectCtx.next) {\n            rejectCtx.next();\n          }\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n  };\n\n  _newXHRID() {\n    this._xhrID++;\n    return this._xhrID;\n  }\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (resp.error || resp.status !== 200 || this._clientID !== clientID) {\n        return;\n      }\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      const req = {\n        channel: channel,\n        token: token\n      };\n      const msg = {};\n\n      if (this._config.protocolVersion === 'v2') {\n        msg['sub_refresh'] = req;\n      } else {\n        msg.method = this._methodType.SUB_REFRESH;\n        msg.params = req;\n      }\n\n      const self = this;\n\n      this._call(msg).then(resolveCtx => {\n        let result;\n        if (self._config.protocolVersion === 'v1') {\n          result = self._decoder.decodeCommandResult(self._methodType.SUB_REFRESH, resolveCtx.reply.result);\n        } else {\n          result = resolveCtx.reply.sub_refresh;\n        }\n        this._subRefreshResponse(channel, result);\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subRefreshError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const req = {\n      channel: channel\n    };\n\n    if (sub._subscribeData) {\n      req.data = sub._subscribeData;\n    }\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        req.recover = true;\n        const seq = this._getLastSeq(channel);\n        const gen = this._getLastGen(channel);\n        if (seq || gen) {\n          if (seq) {\n            req.seq = seq;\n          }\n          if (gen) {\n            req.gen = gen;\n          }\n        } else {\n          const offset = this._getLastOffset(channel);\n          if (offset) {\n            req.offset = offset;\n          }\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          req.epoch = epoch;\n        }\n      }\n\n      const msg = {};\n      if (this._config.protocolVersion === 'v2') {\n        msg.subscribe = req;\n      } else {\n        msg.method = this._methodType.SUBSCRIBE;\n        msg.params = req;\n      }\n\n      this._call(msg).then(resolveCtx => {\n        let result;\n        if (this._config.protocolVersion === 'v1') {\n          result = this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.reply.result);\n        } else {\n          result = resolveCtx.reply.subscribe;\n        }\n        this._subscribeResponse(\n          channel,\n          recover,\n          result\n        );\n        if (resolveCtx.next) {\n          resolveCtx.next();\n        }\n      }, rejectCtx => {\n        this._subscribeError(channel, rejectCtx.error);\n        if (rejectCtx.next) {\n          rejectCtx.next();\n        }\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    delete this._subs[sub.channel];\n    delete this._lastOffset[sub.channel];\n    delete this._lastSeq[sub.channel];\n    delete this._lastGen[sub.channel];\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      const req = {\n        channel: sub.channel\n      };\n      const msg = {};\n      if (this._config.protocolVersion === 'v2') {\n        msg.unsubscribe = req;\n      } else {\n        msg.method = this._methodType.UNSUBSCRIBE;\n        msg.params = req;\n      }\n      this._addMessage(msg);\n    }\n  };\n\n  _getTTLMilliseconds(ttl) {\n    // https://stackoverflow.com/questions/12633405/what-is-the-maximum-delay-for-setinterval\n    return Math.min(ttl * 1000, 2147483647);\n  }\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _isServerSub(channel) {\n    return this._serverSubs[channel] !== undefined;\n  };\n\n  _connectResponse(result, isRecover) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n    this._refreshRequired = false;\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), this._getTTLMilliseconds(result.ttl));\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n\n    if (result.subs) {\n      this._processServerSubs(result.subs);\n    }\n  };\n\n  _processServerSubs(subs) {\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        const isResubscribe = this._serverSubs[channel] !== undefined;\n        let subCtx = { channel: channel, isResubscribe: isResubscribe };\n        subCtx = this._expandSubscribeContext(subCtx, sub);\n        this.emit('subscribe', subCtx);\n      }\n    }\n    for (const channel in subs) {\n      if (subs.hasOwnProperty(channel)) {\n        const sub = subs[channel];\n        if (sub.recovered) {\n          let pubs = sub.publications;\n          if (pubs && pubs.length > 0) {\n\n            // handle legacy order.\n            // TODO: remove as soon as Centrifuge v1 released.\n            if (pubs.length > 1 && (!pubs[0].offset || pubs[0].offset > pubs[1].offset)) {\n              pubs = pubs.reverse();\n            }\n\n            for (let i in pubs) {\n              if (pubs.hasOwnProperty(i)) {\n                this._handlePublication(channel, pubs[i]);\n              }\n            }\n          }\n        }\n        this._serverSubs[channel] = {\n          'seq': sub.seq,\n          'gen': sub.gen,\n          'offset': sub.offset,\n          'epoch': sub.epoch,\n          'recoverable': sub.recoverable\n        };\n      }\n    }\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect(11, 'no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect(10, 'subscribe timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _expandSubscribeContext(ctx, result) {\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    ctx.recovered = recovered;\n\n    let positioned = false;\n    if ('positioned' in result) {\n      positioned = result.positioned;\n    }\n    let epoch = '';\n    if ('epoch' in result) {\n      epoch = result.epoch;\n    }\n    let offset = 0;\n    if ('offset' in result) {\n      offset = result.offset;\n    }\n    if (positioned) {\n      ctx.streamPosition = {\n        'offset': offset,\n        'epoch': epoch\n      };\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n    return ctx;\n  }\n\n  _subscribeResponse(channel, isRecover, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    sub._setSubscribeSuccess(result);\n\n    let pubs = result.publications;\n    if (pubs && pubs.length > 0) {\n      if (pubs.length >= 2 && !pubs[0].offset && !pubs[1].offset) {\n        // handle legacy order.\n        pubs = pubs.reverse();\n      }\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    }\n\n    if (result.recoverable && (!isRecover || !result.recovered)) {\n      this._lastSeq[channel] = result.seq || 0;\n      this._lastGen[channel] = result.gen || 0;\n      this._lastOffset[channel] = result.offset || 0;\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._getTTLMilliseconds(result.ttl));\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n\n    if (!(id in this._callbacks)) {\n      next();\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({ reply, next });\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        next();\n        return;\n      }\n      const error = reply.error;\n      errback({ error, next });\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const ctx = { 'info': join.info };\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('join', ctx);\n      }\n      return;\n    }\n    sub.emit('join', ctx);\n  };\n\n  _handleLeave(channel, leave) {\n    const ctx = { 'info': leave.info };\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        ctx.channel = channel;\n        this.emit('leave', ctx);\n      }\n      return;\n    }\n    sub.emit('leave', ctx);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const ctx = {};\n    const sub = this._getSub(channel);\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        delete this._serverSubs[channel];\n        ctx.channel = channel;\n        this.emit('unsubscribe', ctx);\n      }\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handleSub(channel, sub) {\n    this._serverSubs[channel] = {\n      'seq': sub.seq,\n      'gen': sub.gen,\n      'offset': sub.offset,\n      'epoch': sub.epoch,\n      'recoverable': sub.recoverable\n    };\n    let ctx = { 'channel': channel, isResubscribe: false };\n    ctx = this._expandSubscribeContext(ctx, sub);\n    this.emit('subscribe', ctx);\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    const ctx = {\n      'data': pub.data,\n      'seq': pub.seq,\n      'gen': pub.gen,\n      'offset': pub.offset\n    };\n    if (pub.info) {\n      ctx.info = pub.info;\n    }\n    if (pub.meta) {\n      ctx.meta = pub.meta;\n    }\n    if (!sub) {\n      if (this._isServerSub(channel)) {\n        if (pub.seq !== undefined) {\n          this._serverSubs[channel].seq = pub.seq;\n        }\n        if (pub.gen !== undefined) {\n          this._serverSubs[channel].gen = pub.gen;\n        }\n        if (pub.offset !== undefined) {\n          this._serverSubs[channel].offset = pub.offset;\n        }\n        ctx.channel = channel;\n        this.emit('publish', ctx);\n      }\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    if (pub.offset !== undefined) {\n      this._lastOffset[channel] = pub.offset;\n    }\n    sub.emit('publish', ctx);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUBSCRIBE) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUBSCRIBE, push.data);\n      this._handleUnsub(channel, unsub);\n    } else if (type === this._pushType.SUBSCRIBE) {\n      const sub = this._decoder.decodePushData(this._pushType.UNSUBSCRIBE, push.data);\n      this._handleSub(channel, sub);\n    }\n    next();\n  }\n\n  _handlePushV2(data, next) {\n    const channel = data.channel;\n    if (data.pub) {\n      this._handlePublication(channel, data.pub);\n    } else if (data.message) {\n      this._handleMessage(data.message);\n    } else if (data.join) {\n      this._handleJoin(channel, data.join);\n    } else if (data.leave) {\n      this._handleLeave(channel, data.leave);\n    } else if (data.unsubscribe) {\n      this._handleUnsub(channel, data.unsubscribe);\n    } else if (data.subscribe) {\n      this._handleSub(channel, data.subscribe);\n    }\n    next();\n  }\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {};\n    if (this._config.protocolVersion === 'v2') {\n      // v2 does not require any additional data for pings;\n    } else {\n      msg.method = this._methodType.PING;\n    }\n    this._call(msg).then(resolveCtx => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, resolveCtx.result));\n      if (resolveCtx.next) {\n        resolveCtx.next();\n      }\n    }, rejectCtx => {\n      this._debug('ping error', rejectCtx.error);\n      if (rejectCtx.next) {\n        rejectCtx.next();\n      }\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastOffset(channel) {\n    const lastOffset = this._lastOffset[channel];\n    if (lastOffset) {\n      return lastOffset;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback({ error: this._createErrorObject(_errorTimeout) });\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message) {\n    let id = this._nextMessageId();\n    message.id = id;\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    return id;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect(0, 'client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const clientID = this._clientID;\n    const xhrID = this._newXHRID();\n\n    const cb = (resp) => {\n      if (xhrID in this._xhrs) {\n        delete this._xhrs[xhrID];\n      }\n      if (this._clientID !== clientID) {\n        return;\n      }\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const req = {\n              channel: channel,\n              token: token\n            };\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              req.recover = true;\n              const seq = this._getLastSeq(channel);\n              const gen = this._getLastGen(channel);\n              if (seq || gen) {\n                if (seq) {\n                  req.seq = seq;\n                }\n                if (gen) {\n                  req.gen = gen;\n                }\n              } else {\n                const offset = this._getLastOffset(channel);\n                if (offset) {\n                  req.offset = offset;\n                }\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                req.epoch = epoch;\n              }\n            }\n            const msg = {};\n            if (this._config.protocolVersion === 'v2') {\n              msg.subscribe = req;\n            } else {\n              msg.method = this._methodType.SUBSCRIBE;\n              msg.params = req;\n            }\n            this._call(msg).then(resolveCtx => {\n              let result;\n              if (this._config.protocolVersion === 'v1') {\n                result = this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, resolveCtx.reply.result);\n              } else {\n                result = resolveCtx.reply.subscribe;\n              }\n              this._subscribeResponse(\n                channel,\n                recover,\n                result\n              );\n              if (resolveCtx.next) {\n                resolveCtx.next();\n              }\n            }, rejectCtx => {\n              this._subscribeError(channel, rejectCtx.error);\n              if (rejectCtx.next) {\n                rejectCtx.next();\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      const xhr = this._ajax(\n        this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      this._xhrs[xhrID] = xhr;\n    }\n  };\n\n  _setSubscribeSince(sub, since) {\n    this._lastOffset[sub.channel] = since.offset;\n    this._lastEpoch[sub.channel] = since.epoch;\n    sub._setNeedRecover(true);\n  }\n\n  subscribe(channel, events, opts) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe(opts);\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe(opts);\n    return sub;\n  };\n}\n","import { Centrifuge } from './centrifuge.js';\nexport default Centrifuge;\n","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUBSCRIBE: 3,\n  MESSAGE: 4,\n  SUBSCRIBE: 5\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    return commands.map(c => JSON.stringify(c)).join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    return data.split('\\n').filter(r => r !== '').map(r => JSON.parse(r));\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n    this._promiseId = 0;\n    this._subscribeData = null;\n    this._autoResubscribeErrorCodes = [];\n    this._autoResubscribeMinDelay = 500;\n    this._autoResubscribeMaxDelay = 20000;\n    this._resubscribeTimeout = null;\n    this._resubscribeAttempts = 0;\n\n    this.on('error', function (errContext) {\n      this._centrifuge._debug('subscription error', errContext);\n    });\n  }\n\n  _nextPromiseId() {\n    return ++this._promiseId;\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    }).then(function () { }, function () { });\n  };\n\n  _setNeedRecover(enabled) {\n    this._recoverable = enabled;\n    this._recover = enabled;\n  }\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(subscribeResult) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    this._resubscribeAttempts = 0;\n    const successContext = this._getSubscribeSuccessContext(subscribeResult);\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].resolve();\n      delete this._promises[id];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const id in this._promises) {\n      clearTimeout(this._promises[id].timeout);\n      this._promises[id].reject(err);\n      delete this._promises[id];\n    }\n\n    if (this._autoResubscribeErrorCodes.indexOf(err.code) > -1) {\n      this._resubscribeAttempts++;\n      const self = this;\n      const jitter = Math.round(Math.random() * this._autoResubscribeMinDelay);\n      this._resubscribeTimeout = setTimeout(function () {\n        self.subscribe();\n      }, Math.min(\n        this._autoResubscribeMaxDelay,\n        Math.pow(this._resubscribeAttempts, 2) * this._autoResubscribeMinDelay + jitter)\n      );\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._resubscribeAttempts = 0;\n    clearTimeout(this._resubscribeTimeout);\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(subscribeResult) {\n    let ctx = {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe\n    };\n    if (subscribeResult) {\n      // subscribeResult not available when called from Subscription.ready method at the moment.\n      ctx = this._centrifuge._expandSubscribeContext(ctx, subscribeResult);\n    }\n    return ctx;\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  _setSubscribeData(data) {\n    this._subscribeData = data;\n  }\n\n  _setAutoResubscribe(opts) {\n    this._autoResubscribeErrorCodes = opts.autoResubscribeErrorCodes;\n    if (opts.autoResubscribeMinDelay) {\n      this._autoResubscribeMinDelay = opts.autoResubscribeMinDelay;\n    }\n    if (opts.autoResubscribeMaxDelay) {\n      this._autoResubscribeMaxDelay = opts.autoResubscribeMaxDelay;\n    }\n  }\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe(opts) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    if (opts && opts.since) {\n      this._centrifuge._setSubscribeSince(this, opts.since);\n    }\n    if (opts && opts.data) {\n      this._setSubscribeData(opts.data);\n    }\n    if (opts && opts.autoResubscribeErrorCodes && opts.autoResubscribeErrorCodes.length > 0) {\n      this._setAutoResubscribe(opts);\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall() {\n    if (this._isSuccess()) {\n      return Promise.resolve();\n    } else if (this._isError()) {\n      return Promise.reject(this._error);\n    }\n    let subPromise = new Promise((res, rej) => {\n      const timeout = setTimeout(function () {\n        rej({ 'code': 0, 'message': 'timeout' });\n      }, this._centrifuge._config.timeout);\n      this._promises[this._nextPromiseId()] = {\n        timeout: timeout,\n        resolve: res,\n        reject: rej\n      };\n    });\n    return subPromise;\n  }\n\n  publish(data) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.publish(self.channel, data);\n    });\n  };\n\n  presence() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presence(self.channel);\n    });\n  };\n\n  presenceStats() {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.presenceStats(self.channel);\n    });\n  };\n\n  history(options) {\n    const self = this;\n    return this._methodCall().then(function () {\n      return self._centrifuge.history(self.channel, options);\n    });\n  };\n}\n","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\nexport function extend(a, b) {\n  for (const key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(579);\n",""],"names":["_errorTimeout","_errorConnectionClosed","Centrifuge","url","options","_url","_websocket","_sockjs","_isSockjs","_xmlhttprequest","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_serverSubs","_lastSeq","_lastGen","_lastOffset","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_xhrID","_xhrs","_dispatchPromise","Promise","resolve","_protocol","_config","protocol","protocolVersion","debug","name","version","websocket","sockjs","xmlhttprequest","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTimeout","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","disableWithCredentials","_configure","token","data","headers","params","callback","query","_debug","JSON","stringify","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","e","error","_log","setTimeout","send","arguments","WebSocket","format","_formatOverride","Error","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","isProtobufURL","indexOf","_setFormat","SockJS","newStatus","interval","xhrID","abort","reconnect","_stopPing","id","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_shouldResubscribe","_setSubscribing","_setUnsubscribed","_abortInflightXHRs","_clearSubRefreshTimeout","transport","OPEN","commands","_isTransportOpen","command","encodeCommands","sockjsOptions","transports","server","_websocketSupported","subProtocol","_getSubProtocol","binaryType","onopen","onheartbeat","_restartPing","req","subs","hasSubs","recoverable","seq","gen","offset","epoch","Date","msg","connect","_call","then","resolveCtx","result","decodeCommandResult","CONNECT","reply","_connectResponse","next","rejectCtx","err","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","ctx","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_rpc","method","rpc","RPC","self","_methodCall","SEND","isConnected","reject","sent","_transportSend","undefined","since","limit","reverse","resultCB","publish","PUBLISH","_getHistoryRequest","history","HISTORY","publications","presence","PRESENCE","PRESENCE_STATS","presence_stats","num_users","num_clients","replies","decodeReplies","finishDispatch","_dispatchSynchronized","p","_dispatchReply","_handleReply","_handlePush","_handlePushV2","push","_addMessage","_registerCall","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","emit","close","_refreshFailed","clientID","_newXHRID","cb","resp","jitter","Math","round","random","max","refresh","REFRESH","_refreshResponse","_refreshError","context","_ajax","expires","client","_getTTLMilliseconds","ttl","channelsData","channels","channelData","_getSub","SUB_REFRESH","sub_refresh","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","_setNew","_subscribeData","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","_getLastSeq","_getLastGen","_getLastOffset","_getLastEpoch","subscribe","SUBSCRIBE","_subscribeResponse","_subscribeError","unsubscribe","UNSUBSCRIBE","min","isRecover","wasReconnecting","_resetRetry","getTime","startBatching","stopBatching","_startPing","latency","_processServerSubs","subCtx","_expandSubscribeContext","recovered","pubs","_handlePublication","_isSubscribing","message","_setSubscribeError","positioned","streamPosition","_setSubscribeSuccess","_recoverable","join","info","_isServerSub","leave","unsub","resubscribe","pub","meta","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","_handleUnsub","_handleSub","messages","slice","PING","_pingResponse","lastSeq","lastOffset","lastGen","lastEpoch","errObject","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","_setNeedRecover","events","opts","currentSub","_setEvents","_isUnsubscribed","Subscription","EventEmitter","map","c","split","filter","r","methodType","pushType","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_promiseId","_autoResubscribeErrorCodes","_autoResubscribeMinDelay","_autoResubscribeMaxDelay","_resubscribeTimeout","_resubscribeAttempts","on","errContext","_resolve","value","_reject","enabled","Object","prototype","toString","call","knownEvents","l","ev","subscribeResult","successContext","_getSubscribeSuccessContext","_getSubscribeErrorContext","pow","noResubscribe","needTrigger","subscribeErrorContext","autoResubscribeErrorCodes","autoResubscribeMinDelay","autoResubscribeMaxDelay","_setSubscribeSince","_setSubscribeData","_setAutoResubscribe","_unsubscribe","_isError","subPromise","res","rej","_nextPromiseId","presenceStats","startsWith","prefix","lastIndexOf","isFunction","log","level","args","console","logger","apply","backoff","step","floor","errorExists","extend","a","b","key"],"sourceRoot":""}